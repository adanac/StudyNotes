#include<iostream>
#include<vector>
#include<string>
#include<algorithm>
using namespace std;
struct s
{
	string t;
	int r;
};

bool operator < (const s & r1, const s & r2);
bool worseThan(const s & r1, const s & r2);
bool fillreview(s & rr);
void show(const s & rr);

bool operator < (const s & r1, const s & r2)
{
	if( r1.t < r2.t)
		return true;
	else
		if(r1.t == r2.t && r1.r < r2.r)
			return true;
		else
			return false;
}

bool rank(const s & r1, const s & r2)
{
	if(r1.r > r2.r)
		return true;
	else
		return false;
}

bool fillreview(s & rr)
{
	cout<<"\n\nstring: ";
	cin>>rr.t;
	if(rr.t == "quit")
		return false;
	cout<<"Num: ";
	cin>>rr.r;
	if( !rr.r )
		return false;
	return true;
}

void show(s & rr)
{
	cout<<rr.t<<"\t"<<rr.r<<endl;
}

int main()
{
	vector<s>books;
	s t;
	while( fillreview(t) )
	books.push_back(t);
	vector<s>::iterator pr;
	if( books.size() > 0 )
	{
		cout<<"books.size(): "<<books.size()<<endl;

		cout<<"\n\nfor_each(books.begin(), books.end(), show)\n";
		for(pr=books.begin(); pr != books.end(); pr++)
			show( *pr);

		sort( books.begin(), books.end() );
		cout<<"\n\nsort( books.begin((), books.end() )\n";
		for(pr=books.begin(); pr != books.end(); pr++)
			show( *pr);

		sort(books.begin(), books.end(), rank);
		cout<<"\n\nsort(books.begin(), books.end(), worseThan)\n";
		for(pr=books.begin(); pr != books.end(); pr++)
			show( *pr);

		random_shuffle( books.begin(), books.end() );
		cout<<"\n\nrandom_shuffle( books.begin(), books.end()\n";
		for(pr=books.begin(); pr != books.end(); pr++)
			show( *pr);

	}
	else
		cout<<"No enteries.";
	return 0;
}



