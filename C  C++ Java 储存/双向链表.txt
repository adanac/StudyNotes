#include<stdio.h>
#include <stdlib.h>

typedef struct node
{
	int n;
	struct node *piror, *next;
}s;

s *creat()
{
	int i, n;
	s *head, *p, *q;
	printf("\n双向链表长度: ");
	scanf("%d", &n);
	for(i=0; i<n; i++)
	{
		q = ( s* )malloc( sizeof(s) );
		printf("\ninput 第 %d 个数: ", i+1);
		scanf("%d", &q->n);
		if( i==0 )
		{
			head = q;
			head->piror = head;
			head->next = head;
			p = q;
		}
		else
			p->next = q;
		
		q->piror = p;
		q->next = head;
		head->piror=q;
		p = q;
	}
	return head;
}

void find(s* head)
{
	int m;
	s *p;
	printf("Please input you want to find element: ");
	scanf("%d", &m);
	p = head;
	while(p->n != m && p->next != head)
		p = p->next;
	if( p->n == m)
		printf("find: %d\n", p->n);
	else
		puts("\nNot found!\n");
}

s* insert(s* head)
{
	int m;
	s *p, *q;
	q = (s*)malloc( sizeof(s) );
	printf("\nbefore insert the element: ");
loop:scanf("%d", &m);
	 p = head;
	 while( p->n != m && p->next != head )
		 p = p->next;
	if( p->n != m )
	{
		printf("\n没有该元素，重新输入: ");
		goto loop;
	}
	printf("\nInput you want to insert the element: ");
	scanf("%d", &q->n);

	p->piror->next = q;
	q->piror = p->piror;
	q->next = p;
	p->piror = q;
	return head;
}
s* del(s *head)
{
	int m;
	s *p;
	puts("\nInput your want to delete the element: ");
loop:	scanf("%d", &m);
		p = head;
	while( p->n != m && p->next != head)
		p = p->next;
	if(p->n != m)
	{
		puts("\n没有该元素，请重新输入: ");
		goto loop;
	}
	if( p==head)
	{
		head = head->next;
		head->piror=p->piror;
		p->piror->next = head;
		free(p);
	}
	else
	{	
		p->piror->next = p->next;
		p->next->piror = p->piror;
		free(p);
	}

	return head;
}


void output(s* head)
{
	s* p = head;
	printf("\noutput\n");
	do
	{
		printf("%d  ", p->n);
		p = p->next;
	}while( p != head );
}
void main()
{
	s * head;
	head = creat();
	output(head);

	puts("\n\nfind\n");
	find(head);

	puts("\n\ninsert\n");
	head = insert(head);
	output(head);

	puts("\n\ndelete\n");
	head = del(head);
	output(head);
}
