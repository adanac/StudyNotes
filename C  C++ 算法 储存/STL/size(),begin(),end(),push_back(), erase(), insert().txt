#include<iostream>
#include<string>
#include<vector>
using namespace std;
struct review
{
	string t;
	int r;
};

bool fillreview(review & rr);
void showreview(review & rr);

bool fillreview(review & rr)
{
	cout<<"\nstring: ";	
	cin>>rr.t;	
	if(rr.t == "quit")
		return false;
	cout<<"Num: ";
	cin>>rr.r;
	if( !rr.r )
		return false;
	return true;
}

void showreview(review & rr)
{
	cout<<rr.r<<"\t"<<rr.t<<endl;
}


int main()
{
	vector<review>books;
	
	review  t;
	int i;
	while( fillreview(t) )
		books.push_back(t);
	cout<<"\n\n books.size(): "<<books.size()<<"\n\n";
	int num=books.size();
	if(num>0)
	{
		cout<<"showreview(books[i])\n";
		for(i=0; i<num; i++)
			showreview(books[i]);

		vector<review>::iterator pr;
		cout<<"\n\nshowreview( *pr)\n";
		for(pr=books.begin(); pr != books.end(); pr++)
			showreview( *pr );
		
		vector<review>oldlist(books);
		cout<<"\n\noldlist\n";
		for(pr=oldlist.begin(); pr != oldlist.end(); pr++)
				showreview(*pr);
		if(num >3 )
		{
			books.erase(books.begin()+1, books.begin()+3);
			cout<<"\n\nbooks.erase(books.begin()+1, books.begin()+3)\n";
			for(pr=books.begin(); pr != books.end(); pr++)
				showreview( *pr );

			books.insert(books.begin(), oldlist.begin()+1, oldlist.begin()+2);
			cout<<"\n\nbooks.insert(books.begin(), oldlist.begin()+1, oldlist.begin()+2)\n";
			for(pr=books.begin(); pr != books.end(); pr++)
				showreview(*pr);
		}
		books.swap(oldlist);	
		cout<<"\n\nbooks.swap(oldlist)\n";
		for(pr=books.begin(); pr != books.end(); pr++)
			showreview( *pr );
		cout<<"\n\noldlist\n";
		for(pr=oldlist.begin(); pr != oldlist.end(); pr++)
			showreview( *pr );
	}
	else
		cout<<"\nNothing entered, nothing gained.\n";
	return 0;
}




