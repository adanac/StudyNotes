
如果一个变量是成员变量，那么多个线程对同一个对象的成员变量进行操作时，它们对该成员变量是彼此影响的，也就是说一个线程对成员变量的改变会影响到另一个线程。


如果一个变量是局部变量，那么每个线程都会有一个该局部变量的拷贝（即便是同一个对象中的方法的局部变量，也会对每一个线程有一个拷贝），一个线程对该局部变量的改变不会影响到其他线程

public class Thread1 implements Runnable
{
    int a=0;

    public void run()
    {
        synchronized(this)
        {

            for(int i=0; i < 5; i++)
            {
                a++;
                System.out.println(Thread.currentThread().getName() + ": i= " + i + ", a=" + a + "\n");
            }
        }
    }

    public static void main(String[] args)
    {
        Thread1 t1=new Thread1();

        Thread ta=new Thread(t1, "A");
        Thread tb=new Thread(t1, "B");
        Thread tc=new Thread(t1, "C");

        ta.start();
        tb.start();
        tc.start();

    }
}
