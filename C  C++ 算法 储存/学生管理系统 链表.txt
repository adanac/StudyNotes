#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<time.h>
#include<conio.h>
void showmenu1();
void showmenu2();
void showmenu3();
void showmenu4();
void showmenu5();
struct s
{
	char name[20];
	char gender;
	char num[10];
	float Chin;
	float math;
	float Eng;
	float aver;
	char pass[20];
	struct s* next;
};
FILE *fp1;
FILE *fp2;
void showmenu1()
{
	system("cls");
	printf("\n\n\t\t\t欢 迎  您  进 入\n");
	printf("\n\t\t     学  生  管  理  系   统\n\n\n");
	printf("\t\t\t  1.用户登录\n\n");
	printf("\t\t\t  2.管理员登录\n\n");
	printf("\t\t\t  3.退出登录\n");
	printf("\t________________________________________________________\n\n\n");
	printf("\t\t\t请选择操作: ");
}
void showmenu2()//用户登录，只可查询本人信息
{
	system("cls");
	printf("\n\t\t  学  生  管  理  系   统\n\n\n");
	printf("\t\t\t1.查询数据\n\n");
	printf("\t\t\t2.修改密码\n\n");
	printf("\t\t\t3.退出登录\n");
	printf("\t________________________________________________________\n\n\n");
	printf("\t\t\t请选择操作: ");
}
void showmenu3()//管理员登陆，可查询所有学生数据
{
	system("cls");
	printf("\n\t\t    学  生  管  理  系   统\n\n\n");
	printf("\t\t\t1.新建学生数据\n\n");	
	printf("\t\t\t2.删除学生数据\n\n");
	printf("\t\t\t3.修改学生数据\n\n");
	printf("\t\t\t4.查询学生成绩\n\n");
	printf("\t\t\t5.排列学生数据\n\n");
	printf("\t\t\t6.显示学生成绩\n\n");
	printf("\t\t\t7.修改密码\n\n");
	printf("\t\t\t8.退出登录\n");
	printf("\t________________________________________________________\n\n\n");
	printf("\t\t\t请选择操作: ");
	
}
void showmenu4()
{
	system("cls");
	printf("\n\t\t   学  生  管  理  系   统\n\n\n");
	printf("\n\t\t\t1.修改学号\n\n");	
	printf("\t\t\t2.修改姓名\n\n");
	printf("\t\t\t3.修改性别\n\n");
	printf("\t\t\t4.修改语文成绩\n\n");
	printf("\t\t\t5.修改数学成绩\n\n");
	printf("\t\t\t6.修改英语成绩\n\n");
	printf("\t\t\t7.退出登录\n");
	printf("\t________________________________________________________\n\n\n");
	printf("\t\t\t请选择操作: ");
}
void showmenu5()
{	
	system("cls");
	printf("\n\n\n\n\t\t\t1.学号排列\n\n");
	printf("\t\t\t2.平均成绩排列\n\n");
	printf("\t\t\t3.退出登录\n");
	printf("\t________________________________________________________\n\n\n");
	printf("\t\t\t请选择操作: ");
}

void pass(char s[])
{
	int i;
	for(i=0; ; )
	{
		s[i] = getch();
		if(s[i] == 8)
		{
			printf("\b \b");
			i--;
		}
		else 
			if(s[i] == 13)
			{
				s[i] = '\0';
				break;
			}
			else
				printf("*");
			i++;
	}
}
void check() ///验证码的随机生成
{
	char s1[20], s2[20];
	int i, m, n;
	srand( (unsigned)time(NULL) );
	printf("\n\n请输入验证码\n");
	do{

	for(i=0; i<4; i++)
	{
		m = rand() % 3;
		if(m==0)
		{
			n = rand()%10;
			s1[i] = n+'0';
		}
		else
		{
			m = rand() % 2;
			n = rand() % 26;
			if(m==0)
				s1[i] = 'a' + n;
			else
				s1[i] = 'A' + n;
		}
	}
		s1[i] = '\0';
		puts(s1);
		printf("\n");
		fflush(stdin); 
		gets(s2);
		if( !strcmp(s1, s2) )
		{
			printf("\n\n验证码正确，操作成功!\n");
			getch();
			break;
		}
		else
			printf("\n\n验证码错误，请重新输入验证码\n");
	}while( strcmp(s1, s2) );
}

struct s* set(struct s *head)
{
	struct s *p, *q;
	char name[5][20] = {"student1", "student2", "student3", "student4", "student5"}; //建立5个学生信息，下面是各种学生信息的初始化
	char gender[5] = {'m', 'm', 'm', 'm', 'm'};
	char num[5][10] = {"01", "02", "03", "04", "05"};
	float Chin[5] = {10.0, 20.0, 30.0, 40.0, 50.0};
	float math[5] = {10.0, 20.0, 30.0, 40.0, 50.0};
	float Eng[5] =  {10.0, 20.0, 30.0, 40.0, 50.0};
	char pass[5][20] = {"111111", "222222", "333333", "444444", "555555"};
	char adminpass[20] = "123456"; //初始化管理员密码为123456

	int i;
    fp1 = fopen("user.txt", "wb");
	for(i=0; i<5; i++)
	{
		p = (struct s*)malloc( sizeof(struct s) );
		strcpy( p->name, name[i] );
		p->gender = gender[i];
		strcpy(p->num, num[i]);
		p->Chin = Chin[i];
		p->math = math[i];
		p->Eng = Eng[i];
		p->aver = (float)(p->Chin+p->math+p->Eng)/3;
		strcpy(p->pass, pass[i]);	

		if(i==0)
			head = p;
		else
			q->next=p;

		q = p;
		fwrite(p, sizeof(struct s), 1, fp1);
	}
	
	q->next = NULL;

	fclose(fp1);
	fp2 = fopen("admin.txt", "wb");
	fwrite(adminpass, sizeof(adminpass), 1, fp2);
	fclose(fp2);
	return head;

}
int studentcount(struct s *head)
{
	struct s *p = head;
	int i=0;

	while( p )
	{
		i++;
		p = p->next;	
	}

	return i;
}

void print1( struct s *head, struct s userdata) 
{
	struct s *p=head, *s=(struct s*)malloc( sizeof(struct s) );
	printf("\n\n");
	printf("学号      姓名         性别        语文        数学        英语        均分\n\n");
	fp1 = fopen("user.txt", "rb");
	while(p)
	{
		if( strcmp(p->num, userdata.num) == 0)
		{
			fread(s, sizeof(struct s), 1, fp1);
			break;
		}
		p=p->next;
	}
	fclose(fp1);
	printf("%s %13s %9c  %11.2f %11.2f %11.2f %11.2f\n\n\n", s->num, s->name, s->gender, s->Chin, s->math, s->Eng, s->aver);
    printf("\n\n请按任意键退出！");
	getch();
	return ;
}


void fixpass1(struct s *head, struct s userdata)
{
	struct s *p = head;
	char s[20], s1[20], s2[20];
	int  i, count = studentcount(head);
	printf("\n\n请输入原始密码\n");
	fflush(stdin);
	pass(s);
	while( strcmp(userdata.pass, s) )
	{
		printf("\n\n密码不正确，请重新输入\n");
		fflush(stdin);
		pass(s);
	}
	printf("\n\n请输入新密码\n");
	fflush(stdin);
	pass(s1);
	printf("\n\n请确认密码\n");
	fflush(stdin);
	pass(s2);

	while( strcmp(s1, s2) )
	{
		printf("\n\n两次输入的密码不一致，请重新输入\n");
		fflush(stdin);
		pass(s2);
	}
	strcpy(userdata.pass, s2);

	fp1 = fopen("user.txt", "wb");
	while( p )
	{
		if( !strcmp(p->name, userdata.name) )
		{
			strcpy(p->pass, userdata.pass);
		}
		
		fwrite(p, sizeof(struct s), 1, fp1);
		p = p->next;
	}		
	fclose(fp1);

	printf("\n\n密码修改完成，请按任意键返回！");
	getch();
	return ;
}

int isexist(struct s *head, char num[])
{
	struct s *p = head;
	while( p )
	{
		if( !strcmp(p->num, num) )
			return 0;
		else
		p = p->next;
	}
		return 1;
}

void userload(struct s *head)
{
	struct s *p = head;
	int  n;
	char s[20], num[20];
	struct s userdata;
	printf("\n\n请输入学生学号\n");
	fflush(stdin);
	gets(num);
	while( isexist(head, num) )
	{
		printf("\n\n您所输入的学号不存在，请重新输入\n");
		fflush(stdin);
		gets(num);
	}

	while( p )
	{
		if( !strcmp(p->num, num) )
		{
			userdata = *p;
			break;
		}
		p = p->next;
	}

	printf("\n\n请输入密码\n");
	fflush(stdin);
	pass(s);
	while( strcmp(p->pass, s) )
	{
		printf("\n\n密码不正确，请重新输入\n");
		fflush(stdin);
		pass(s);
	}
	//check();
	showmenu2();
loop:	scanf("%d", &n);
	switch(n)
	{
	case 1:
		system("cls");
		print1(head, userdata);
		break;
	case 2:
		system("cls");
		fixpass1(p, userdata);
		break;
	case 3:
		return;
	default:
		printf("\n\n\t\t\t请重新选择(1~~3)\n");
		goto loop;
	}
	showmenu2();
	goto loop;
}

struct s* add(struct s *head)
{
	int count;
	char s[20];
	char a[10];
	struct s *p = head, *q;

loop1:	q = (struct s*)malloc( sizeof(struct s) ); //每次输入q->num都要申请空间，不然会一直是前一个数据
		count = studentcount(head);
	printf("\n\n请输入第 %d 个学生信息", count+1);
	printf("\n\n请输入学生学号\n");
	fflush(stdin);
	gets(q->num);

	while( !isexist(head, q->num) )
	{
		printf("\n\n已存在该学生信息，请重新输入\n");
		fflush(stdin);
		gets(q->num);
	}
	printf("\n\n请输入学生姓名\n");
	fflush(stdin);
	gets(q->name);
	printf("\n\n请输入学生性别\n");
	scanf("%c", &q->gender);
	printf("\n\n请输入语文成绩\n");
	scanf("%f", &q->Chin);
	printf("\n\n请输入数学成绩\n");
	scanf("%f", &q->math);
	printf("\n\n请输入英语成绩\n");
	scanf("%f", &q->Eng);
	q->aver = (float)( (q->Chin+ q->math + q->Eng)/3 );
	printf("\n\n请设置学生访问密码\n");
	fflush(stdin);
	pass(s);
	strcpy(q->pass, s);
	
	while( p->next )
	{
		p = p->next;
	}

	p->next = q;
	q->next = NULL;

	fp1 = fopen("user.txt", "a+b");
	fwrite(q, sizeof(struct s), 1, fp1);
	fclose(fp1);
	

	printf("\n\n第 %d 名学生信息添加成功, 是否继续(1 or 0 )\n", count+1);
loop2:	fflush(stdin);
	gets(a);

	if( !strcmp(a, "1") )
	{
		goto loop1;
	}

	else
		if( !strcmp(a, "0") )
		{
			printf("\n\n请按任意键退出!\n");
			getch();
			return head;
		}
		else
		{
			printf("\n\n请输入1 or 0\n");
			goto loop2;
		}
}


struct s* del(struct s *head)
{
	struct s *p, *p1;
	char num[10], a[10];
	int count;

loop1:count = studentcount(head); 
	printf("\n\n请输入您想删除的学生的学号\n");
	fflush(stdin);
	gets(num);
	while( isexist(head, num) )
	{
		printf("\n\n不存在该学生信息，请重新输入\n");
		fflush(stdin);
		gets(num);
	}

	p=head;
	while( strcmp(p->num, num) != 0 && p->next)
	{
		p1 = p;
		p = p->next;
	}

	if( !strcmp(p->num, num) )
	{
		if(p == head)
		{
			head = head->next;
			free(p);
		}
		else
		{
			p1->next = p->next;
			free(p);
		}
	}
	
	fp1 = fopen("user.txt", "wb");
	p=head;
	while(p)
	{
	fwrite(p, sizeof(struct s), 1, fp1);
	p=p->next;
	}
	fclose(fp1);
	printf("\n\n学号 %s 的学生信息删除成功，是否继续(1 or 0 )\n", num);

	loop2:	fflush(stdin);
	gets(a);
	if( !strcmp(a, "1") )
	{
		goto loop1;
	}
	else
		if( !strcmp(a, "0") )
		{
			printf("\n\n请按任意键退出!\n");
			getch();
			return head;
		}
		else
		{
			printf("\n\n请输入1 or 0\n");
			goto loop2;
		}
}

void find(struct s *head)
{
	char num[10], s[10];
	struct s *p;
	int n=0;
loop1:	printf("\n\n请输入您想查询的学生学号(支持模糊查询）\n");
	fflush(stdin);
	gets(num);
	printf("\n");

	printf("学号      姓名         性别        语文        数学        英语        均分\n\n");

	p=head;
	while( p )
	{
		if( strstr(p->num, num) )
		{
			printf("%s %13s %9c  %11.2f %11.2f %11.2f %11.2f\n\n\n", p->num, p->name, p->gender, p->Chin, p->math, p->Eng, p->aver);
			n++;
		}
		p = p->next;
	}
	printf("\n共查询到 %d 个学生信息", n);
	printf("\n\n是否要继续查询(1 or 0)\n");
loop2:	fflush(stdin);
	gets(s);
	if( strcmp(s, "1") == 0 )
	{	
		n=0;
		goto loop1;
	}
	else
		if( !strcmp(s, "0") )
		{
			printf("\n\n查询结束，请按任意键返回!");
			getch();
			return;
		}
		else
		{
			printf("\n\n请输入1 or 0\n");
		goto loop2;
		}
}

void print2(struct s*head)
{
	struct s *p;
	int i, n=studentcount(head);

	fp1=fopen("user.txt", "rb");
	printf("学号      姓名         性别        语文        数学        英语        均分\n\n");
	for(i=0; i<n; i++)
	{
		p=(struct s*)malloc( sizeof(struct s) );
		fread(p, sizeof(struct s), 1, fp1);
		printf("%s %13s %9c  %11.2f %11.2f %11.2f %11.2f\n\n\n", p->num, p->name, p->gender, p->Chin, p->math, p->Eng, p->aver);	
	}
	fclose(fp1);
	printf("\n\n请按任意键退出！");
	getch();

}

void fixnum(struct s *head, struct s userdata)
{	
	struct s *p = head;
	int count = studentcount(head);
	char num[10], num1[10];
	printf("\n\n请输入修改学生的原学号\n");
	fflush(stdin);
	gets(num);
	while( strcmp(userdata.num, num) )
	{
		printf("\n\n与原学号不一致,请重新输入\n");
		fflush(stdin);
		gets(num);
	}

	printf("\n\n请输入新学号\n");
	fflush(stdin);
	gets(num1);
	while( isexist(head, num1) == 0)
	{
		printf("\n\n该学生学号已存在，请重新输入\n");
		fflush(stdin);
		gets(num1);
	}
	
	fp1 = fopen("user.txt", "wb");
	while( p )
	{
		if( strcmp(p->num, userdata.num) == 0)
		{
			strcpy( p->num, num1 );
		}
		
		fwrite(p, sizeof(struct s), 1, fp1);
		p = p->next;
	}
		
		fclose(fp1); 
		printf("\n\n学号修改成功，请重新登陆！");
		getch();
		return ;
}

void fixname(struct s *head, struct s userdata) //学生可同名同姓，但学号唯一
{	
	struct s *p=head;
	int count = studentcount(head);
	char name[10];

	printf("\n\n请输入新姓名\n");
	fflush(stdin);
	gets(name);

	fp1 = fopen("user.txt", "wb");
	while( p )
	{
		if( strcmp( p->num, userdata.num ) == 0)
		{
			strcpy( p->name, name);
		}
		fwrite(p, sizeof(struct s), 1, fp1);
		p = p->next;
	}
		
	
	    fclose(fp1);
		printf("\n\n姓名修改成功，请按任意键返回！");
		getch();
		return ;
}
void fixgender(struct s *head, struct s userdata)
{	
	int count = studentcount(head), i;
	char gender;
	struct s *p=head;
	printf("\n\n请输入新性别\n");
	fflush(stdin);
	scanf("%c", &gender);

	fp1 = fopen("user.txt", "wb");
	while(p)
	{
		if( strcmp(p->num, userdata.num) == 0)
		{
			p->gender= gender;
		}
		fwrite(p, sizeof(struct s), 1, fp1);
		p = p->next;
	}
		
		
		fclose(fp1);
		printf("\n\n性别修改成功，请按任意键返回！");
		getch();
		return ;
}

void fixChin(struct s *head, struct s userdata)
{	
	int count = studentcount(head), i;
	float n;
	struct s *p=head;
	printf("\n\n请输入新语文成绩\n");
	fflush(stdin);
	scanf("%f", &n);
	fp1 = fopen("user.txt", "wb");	
	
	while(p)
	{

		if( strcmp(p->num, userdata.num) == 0)
		{
			p->Chin = n;
			p->aver = (float)(p->Chin + p->math + p->Eng) / 3;
		}
		
		fwrite(p, sizeof(struct s), 1, fp1);
		p = p->next;
	}
		
	
		fclose(fp1);
		printf("\n\n语文成绩修改成功，请按任意键返回！");
		getch();
		return ;
}


void fixmath(struct s *head, struct s userdata)
{	
	struct s *p=head;
	int count = studentcount(head), i;
	float n;

	printf("\n\n请输入新数学成绩\n");
	fflush(stdin);
	scanf("%f", &n);
	
	fp1 = fopen("user.txt", "wb");
	while( p )
	{
		if( strcmp(p->num, userdata.num) == 0)
		{
			p->math = n;
			p->aver = (float)(p->Chin + p->math + p->Eng) / 3;
		}
		
		fwrite(p, sizeof(struct s), 1, fp1);
		p = p->next;
	}
	
		fclose(fp1);
		printf("\n\n数学成绩修改成功，请按任意键返回！");
		getch();
		return ;
}

void fixEng(struct s *head, struct s userdata)
{	
	int count = studentcount(head), i;
	float n;
	struct s *p = head;

	printf("\n\n请输入新英语成绩\n");
	fflush(stdin);
	scanf("%f", &n);

	fp1 = fopen("user.txt", "wb");
	while( p)
	{
		if( strcmp(p->num, userdata.num) == 0)
		{
			p->Eng= n;
			p->aver = (float)(p->Chin + p->math + p->Eng) / 3;
		}
		fwrite(p, sizeof(struct s), 1, fp1);
		p = p->next;
	}
	

		fclose(fp1);
		printf("\n\n英语成绩修改成功，请按任意键返回！");
		getch();
		return ;
}

void fixstudent(struct s *head)
{
	struct s *p = head;
	struct s userdata;
	char num[10];
	int i, count = studentcount(head), n;
	printf("\n\n请输入您想修改的学生学号\n");
	fflush(stdin);
	gets(num);
	while( isexist(head, num) )
	{
		printf("\n\n不存在该学生信息，请重新输入\n");
		fflush(stdin);
		gets(num);
	}
	while(p)
	{
		if( !strcmp(p->num, num) )
		{
			userdata = *p;
			break;
		}
		p = p->next;
	}

	showmenu4();
loop:	scanf("%d", &n);
	switch(n)
	{
	case 1:
		system("cls");
		fixnum(head, userdata);
		return;
	case 2:
		system("cls");
		fixname(head, userdata);
		break;
	case 3:
		system("cls");
		fixgender(head, userdata);
		break;
	case 4:
		system("cls");
		fixChin(head, userdata);
		break;
	case 5:
		system("cls");
		fixmath(head, userdata);
		break;	
	case 6:
		system("cls");
		fixEng(head, userdata);
		break;
	case 7:
		return ;
	default:
		printf("\n\n请重新选择操作(1~~7)\n");
		goto loop;
	}
	showmenu4();
	goto loop;
}

struct s* sort(struct s *head)
{
	struct s* sort_1(head);
	struct s* sort_2(head);
	int n;
	showmenu5();
loop:	scanf("%d", &n);
	switch(n)
	{
case 1:
	system("cls");
	head = sort_1(head);
	break;
case 2:
	system("cls");
	head=sort_2(head);
	break;
case 3:
	return head;
default:
	printf("\n\n请重新选择操作(1~~3)\n");
	goto loop;
	}
	showmenu5();
	goto loop;
}

struct s* sort_1(struct s *head)
{
	struct s *Head,*h, *p, *q, *t;
	int i, n=studentcount(head);

	q=head;
	Head=(struct s*)malloc( sizeof(struct s) );
	Head->next = NULL;


	printf("\n\n学号排列（由小到大）\n\n");

	printf("学号      姓名         性别        语文        数学        英语        均分\n\n");
	while(q)
	{
		p = Head;
		while(p->next && strcmp(p->next->num, q->num) < 0 )
			p=p->next;

		t=q->next;
		q->next=p->next;
		p->next=q;
		q=t;
	}
	
	
	p=Head->next;
	while( p )
	{
	
		printf("%s %13s %9c  %11.2f %11.2f %11.2f %11.2f\n\n\n", p->num, p->name, p->gender, p->Chin, p->math, p->Eng, p->aver);
		p = p->next;
	}
	

	fp1=fopen("user.txt", "rb");
	h=Head;//重新读入数据，不受排列影响.
	Head->next=NULL;
	for(i=0; i<n; i++)
	{
		p=(struct s*)malloc( sizeof(struct s) );
		fread(p, sizeof(struct s), 1, fp1);
		p->next=h->next;
		h->next=p;
		h=p;	
	}
	fclose(fp1);
	printf("\n\n请按任意键返回!");
	getch();
	return Head->next;
}

struct s* sort_2(struct s *head)
{
	struct s *Head, *h, *p, *q, *t;
	int i, n=studentcount(head);

	q=head;
	Head=(struct s*)malloc( sizeof(struct s) );
	Head->next = NULL;

	printf("\n\n平均成绩排列（由小到大）\n\n");

	
	printf("学号      姓名         性别        语文        数学        英语        均分\n\n");
	while(q)
	{
		p = Head;
		while(p->next && p->next->aver < q->aver)
			p=p->next;

		t=q->next;
		q->next=p->next;
		p->next=q;
		q=t;
	}

	p=Head->next;

	while( p )
	{
		printf("%s %13s %9c  %11.2f %11.2f %11.2f %11.2f\n\n\n", p->num, p->name, p->gender, p->Chin, p->math, p->Eng, p->aver);
		p = p->next;
	}
	
	
	fp1=fopen("user.txt", "rb");
	h=Head;//重新读入数据，不受排列影响.
	Head->next=NULL;
	for(i=0; i<n; i++)
	{
		p=(struct s*)malloc( sizeof(struct s) );
		fread(p, sizeof(struct s), 1, fp1);
		p->next=h->next;
		h->next=p;
		h=p;	
	}

	fclose(fp1);
	printf("\n\n请按任意键返回!");
	getch();
	return Head->next;
}

void fixpass2()
{
	char s1[20], s2[20], s3[20], s4[20];
	fp2 = fopen("admin.txt", "rb");
	fread(s1, sizeof(s1), 1, fp2);
	printf("\n\n请输入原密码\n");
	fflush(stdin);
	pass(s2);
	while( strcmp(s1, s2) )
	{
		printf("\n\n与原密码不一致，请重新输入\n");
		fflush(stdin);
		pass(s2);
	}
	printf("\n\n请输入新密码\n");
	fflush(stdin);
	pass(s3);
	printf("\n\n请确认新密码\n");
	fflush(stdin);
	pass(s4);
	while( strcmp(s3, s4) )
	{
		printf("\n\n两次输入密码不一致， 请重新输入\n");
		fflush(stdin);
		gets(s4);
	}

	fp2 = fopen("admin.txt", "wb");
	fwrite(s3, sizeof(s3), 1, fp2);
	fclose(fp2);
	printf("\n\n管理员密码修改完成，请按任意键退出！");
	getch();
	return ;
}

struct s* adminload(struct s *head)
{
	char s1[20], s2[20];
	int n;
	fp2 = fopen("admin.txt", "rb");
	fread(s1, sizeof(s1), 1, fp2);
	fclose(fp2);

	printf("\n\n请输入管理员密码\n");
	pass(s2);
	while( strcmp(s1, s2) )
	{
		printf("\n\n密码不正确，请重新输入\n");
		pass(s2);
	}
//	check();
	showmenu3();
loop:	scanf("%d", &n);
	switch(n)
	{
	case 1:
		system("cls");
		head = add(head);
		break;
	case 2:
		system("cls");
		head = del(head);
		break;
	case 3:
		system("cls");
		fixstudent(head);
		break;
	case 4:
		system("cls");
		find(head);
		break;
	case 5:
		system("cls");
		head = sort(head);
		break;
	case 6:
		system("cls");
		print2(head);
		break;
	case 7:
		system("cls");
		fixpass2();
		break;
	case 8:
		return head;
	default:
		printf("\n\t\t\t请重新选择操作(1~~8)\n");
		goto loop;
	}
	showmenu3();
	goto loop;
}



void main()
{
	int n;
	struct s *head;
	head = set(head); //必须返回头结点地址，不然下面userload(head)中的head为空
	showmenu1();
loop:	scanf("%d", &n);
	switch(n)
	{
	case 1:
		system("cls");
		userload(head);
		break;
	case 2:
		system("cls");
		head = adminload(head);
		break;
	case 3:
		return ;
	default:
		printf("\n\n\t\t\t请重新选择（1~~3）\n");
		goto loop;
	}
	showmenu1();
	goto loop;
}




	















	



