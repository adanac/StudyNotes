#include<iostream>
using namespace std;
class shape
{
public:
	virtual float area() const 
	{
		return 0.0;
	}
	virtual float volume() const
	{
		return 0.0;
	}
	virtual void shapename() const = 0; //´¿Ðéº¯Êý
};

class point:public shape
{
public:
	point(float a=0, float b=0):x(a), y(b){}
	void setpoint(float a, float b)
	{
		x=a;
		y=b;
	}
	float getx() const
	{
		return x;
	}
	float gety() const
	{
		return y;
	}
	virtual void shapename() const
	{
		cout<<"point: ";
	}
	friend ostream & operator <<(ostream &, const point & );
protected:
	float x, y;
};
ostream & operator<<(ostream & output, const point & p)
{
	cout<<"["<<p.x<<","<<p.y<<"]";
	return output;
}

class circle:public point
{
public:
	circle(float a=0, float b=0, float r=0):point(a, b), radius(r){}
	void setradius(float r)	
	{
		radius = r ;
	}

	float getradius() const
	{
		return radius;
	}
	virtual float area() const
	{
		return 3.14159*radius*radius;
	}
	virtual void shapename() const 
	{
		cout<<"circle: ";
	}
	friend ostream & operator<<(ostream &, const circle &);
protected:
	float radius;
};
ostream & operator<<(ostream & output, const circle &c)
{
	output<<"[" <<c.x<<c.y<< "," <<c.y<< "], r="<<c.radius<<endl;
	return output;
}

class cylinder:public circle
{
public:
	cylinder(float a=0, float b=0, float r=0, float h=0):circle(a, b, r), height(h){}
	void setheight(float h)
	{
		height = h;
	}
	virtual float arera() const
	{
		return 2*circle::area()+2*3.14159*radius*height;
	}
	virtual float volume() const
	{
		return circle::area()*height;
	}
	virtual void shapename() const
	{
		cout<<"cylinder: ";
	}
	friend ostream & operator <<(ostream & , const cylinder & );
protected:
	float height;
};
ostream & operator << (ostream & output, const cylinder & cy)
{
	output<<"["<<cy.x<<","<<cy.y<< "], r="<<cy.radius<<", h="<<cy.height;
	return output;
}
int main()
{
	point p(3.2, 4.5);
	circle c(2.4, 1.2, 5.6);
	cylinder cy(3.5, 6.4, 5.2, 10.5);
	p.shapename();
	cout<<p<<endl;

	c.shapename();
	cout<<c<<endl;

	cy.shapename();
	cout<<cy<<endl;

	shape *pt;

	pt = &p;
	pt->shapename();
	cout<<p.getx()<<" "<<p.gety()<<" "<<pt->area()<< " "<<pt->volume()<<endl<<endl;

	pt = &c;
	pt->shapename();
	cout<<c.getx()<< " "<<c.gety() <<" "<<pt->area() <<" "<<pt->volume()<<endl<<endl;

	pt=&cy;
	pt->shapename();
	cout<<cy.getx() <<" "<<cy.gety() <<" "<<pt->area() <<" "<<pt->volume() <<endl<<endl;

	return 0;
}



