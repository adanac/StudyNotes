#include<stdio.h>
#include<stdlib.h>
typedef struct node
{
	int data;
	struct node * next;
}list;
int i;
list *creat1(int n)
{
	list *head, *p, *q;
	printf("Input %d numbers\n", n);
	for(i=0; i<n; i++)
	{
		p = (list *)malloc( sizeof(list) );
		scanf("%d", &p->data);
		if(i==0)
			head = p;
		else
			q->next = p;	
		q = p;
	}
	q->next = NULL;//Î²½Úµã±ØĞëÖÃ¿Õ
	return head;
}

list *creat2(int n)
{
	list *head, *p, *q;
	printf("Input %d numbers\n", n);
	for(i=0; i<n; i++)
	{
		p = (list *)malloc( sizeof(list) );
		scanf("%d", &p->data);
		if(i==0)
			head = p;
		else
			q->next = p;	
		q = p;
	}
	q->next = NULL;
	return head;
}


list* merge(list *h1, list *h2)
{
	list *h3, *p;
	h3 = (list *)malloc( sizeof(list) );
	h3->next = NULL;
	p = h3;

	while( h1 && h2 )
	{
		if(h1->data < h2->data)
		{
			p->next = h1;
			p = h1;
			h1=h1->next;
		}
		else
		{
			p->next = h2;
			p = h2;
			h2 = h2->next;
		}
	}
	if(h1)
		p->next = h1;
	else
		p->next = h2;

	return h3->next;
}




void print(list *head)
{
	printf("\noutput the data\n");
	while(head != NULL)
	{
		printf("%d ", head->data);
		head = head->next;
	}
	printf("\n");
}
	


int main()
{
    list * h1, *h2, *h3;

	h1=creat1(5);
	print(h1);

	h2=creat2(3);
	print(h2);

	h3 = merge(h1, h2);
	print(h3);
}
