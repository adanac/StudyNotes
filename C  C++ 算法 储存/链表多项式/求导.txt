#include<stdio.h>
#include<stdlib.h>
typedef struct node
{
	int coef;
	int exp;
	struct node * next;
}list;

int i;
list *creat1(int n)
{
	list *head, *p, *q;
	printf("Input %d numbers\n", n);
	for(i=0; i<n; i++)
	{
		p = (list *)malloc( sizeof(list) );

		scanf("%d", &p->coef);

		scanf("%d", &p->exp);
		if(i==0)
			head = p;
		else
			q->next = p;	
		q = p;
	}
	q->next = NULL;//尾节点必须置空
	return head;
}

list* derivation(list *h)//多项式求导
{
	list *p=h;
	list *head, *s, *r;
	head=(list*)malloc( sizeof(list) );
	s = head;

	while(p)
	{
		p->coef*=p->exp;
		p->exp--;
		if(p->coef == 0 )
		{
			r=p; p=p->next; free(r); s->next = p; 
		}
		else
		{
			s->next = p; s=p; p=p->next;
		}

	}

	return head->next;
}


void print(list *head)
{	
	list *p=head;
	printf("\n\noutput the data\n");

	if(p->coef == 1 && p->exp > 0 )
	{

	}
	
	else
		if(p->coef == -1 && p->exp >0 )
			 printf("-");
	else
	printf("%d", p->coef);

	if(p->exp > 0)
	{
		printf("x^%d", p->exp);
	}
	p=p->next;

	while(p != NULL)
	{	
		
	     if(p->coef == 1 && p->exp > 0 )
		 {
			 printf("+");
		 }
		 else
			 if(p->coef == -1 && p->exp >0 )
			 printf("-");

		else
			if(p->coef > 0)
	    printf("+%d", p->coef);

		 else
			 printf("%d", p->coef);


	   if(p->exp > 0)
	   {
		   printf("x^%d", p->exp);
	   }
    	
	   p=p->next;
	}
	printf("\n\n");
}
	


int main()
{
    list *head;
	int n;

	printf("\n多项式个数: ");
	scanf("%d", &n);

	head=creat1(n);
	print(head);

	head=derivation(head);
	print(head);
}
