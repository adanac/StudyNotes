#include<stdio.h>
#include<malloc.h>
struct student
{
	int num;
 
	float score;
 
	struct student *next;
};
int i;
struct student *creat()
{
	int n;
	struct student *head, *p1, *p2;
	printf("Please input student information numbers: ");
	scanf("%d", &n);
	for(i=0; i<n; i++)
	{
		p1=(struct student*)malloc(sizeof(struct student));
 
		printf("Num %d: ", i+1);
  
		scanf("%d", &p1->num);
  
		printf("Score %d: ", i+1);
  
		scanf("%f", &p1->score);
  
		if(i==0)
		{
			head  = p1;
		} 
		if(i>0)
		{
			p2->next = p1;
   
		}
		p2 = p1;
	}
 
	p2->next = NULL;
 
	return head;

}



/*void sort(struct student *head)
{
	struct student *p = head, *q;
	struct student *t;
	t = (struct student*)malloc( sizeof(struct student) );

	printf("\n\n平均成绩排列（由小到大）\n\n");
	for(p=head; p != NULL; p=p->next)
		for(q = p->next; q != NULL; q=q->next)
		{
			
			if(p->score > q->score)
			{
				t->num = p->num, t->score = p->score;
				p->num = q->num, p->score = q->score;
				q->num = t->num, q->score=t->score;
			}
		}

}*/
void sort(struct student *head)
{
	void print(struct student *head);
	struct student *p, *q, *t, *h;
	h=(struct student *)malloc( sizeof(struct student) );
	h->next = head;
	head=h;

	q=head->next;
	head->next = NULL;//为插入新节点指向NULL提供准备.
	
	while(q)
	{
		p=head;
		while(p->next && p->next->score < q->score)
		{
			p=p->next;
		}
		t=q->next;
		q->next = p->next;//当小于时，p->next=NULL，q->next指向NULL.当大于时就插入.
		p->next = q;
		q=t;//q往后移.
	}

	printf("\n\n平均成绩排列（由小到大）\n\n");	
	print(head->next);

}


void print(struct student *head)
{
	int i=0;
 
	printf("\n\noutput the students information:\n");
 
	while(head != NULL)
	{
		printf("Num %d: %d\n", i+1, head->num);
 
		printf("Score %d: %.2f\n\n", i+1, head->score);
  
		head = head->next;
		i++;
	}

}
main()
{

	struct student *head;
 
	head = creat();
	print(head);
	sort(head);


}