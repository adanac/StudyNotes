#include<stdio.h>
#include<malloc.h>
struct student
{
	int num;
	struct student *next;
};


int i;	
FILE *fp;
struct student *creat(struct student *head)
{
	int n;
	struct student *p1, *p2;
	fp=fopen("a.txt", "wb");
	printf("Please input student information numbers: ");
	scanf("%d", &n);
	for(i=0; i<n; i++)
	{
		p1=(struct student*)malloc(sizeof(struct student));
 
		printf("Num %d: ", i+1);
  
		scanf("%d", &p1->num);

		if(i==0)
		{
			head->next = p1;
		} 
		if(i>0)
		{
			p2->next = p1;
   
		}
		p2 = p1;
		fwrite(p1, sizeof(struct student), 1, fp);
	}
	p2->next = NULL;
	fclose(fp);

	return head;

}

void sort(struct student *head)
{
	void print(struct student *head);
	struct student *p, *q, *t;

	q=head->next;
	head->next = NULL;//为插入新节点指向NULL提供准备.
	
	while(q)
	{
		p=head;
		while(p->next && p->next->num < q->num)
		{
			p=p->next;
		}
		t=q->next;
		q->next = p->next;//当小于时，p->next=NULL，q->next指向NULL.当大于时就插入.
		p->next = q;
		q=t;//q往后移.
	}

	printf("\n\n平均成绩排列（由小到大）\n\n");

	p=head->next;
	while(p)
	{
		printf("Num %d: %d\n", i+1, p->num);
		p = p->next;
		i++;
	}	

}


void count(struct student *head)
{
	int n=0;
	struct student* p=head->next;
	struct student *s;
	fp=fopen("a.txt", "rb");

	while( p )
	{	
		
		n++;	
		p=p->next;

	}

	printf("\n\n恢复数据\n");
	for(i=0; i<n; i++)
	{
	s=(struct student*)malloc( sizeof(struct student) );
	fread(s, sizeof(struct student), 1, fp);
	printf("Num %d: %d\n", i+1, s->num);
	}

	fclose(fp);
}

void print(struct student *head)
{
	int i=0;
	struct student *p=head->next;
 
	printf("\n\noutput the students information:\n");
 
	while(p != NULL)
	{
		printf("Num %d: %d\n", i+1, p->num);
		p = p->next;
		i++;
	}

}


main()
{

	struct student *head;
	head=(struct student*)malloc( sizeof(struct student) );
 
	head = creat(head);
	print(head);

	sort(head);

	count(head);
}




















#include<stdio.h>
#include<malloc.h>
struct student
{
	int num;
	struct student *next;
};


int i;	
FILE *fp;
struct student *creat(struct student *head)
{
	int n,m=0;
	struct student *p, *p1, *p2;
	int count(struct student *head);

	printf("Please input student information numbers: ");
	scanf("%d", &n);
	for(i=0; i<n; i++)
	{
		p1=(struct student*)malloc(sizeof(struct student));
 
		printf("Num %d: ", i+1);
  
		scanf("%d", &p1->num);

		if(i==0)
		{
			head->next = p1;
		} 
		if(i>0)
		{
			p2->next = p1;
   
		}
		p2 = p1;
	
	}
	p2->next = NULL;
	

	fp=fopen("a.txt", "wb");
	p=head->next;
	while( p )
	{	
		
		m++;	
		fwrite(p, sizeof(struct student), 1, fp);
		p=p->next;

	}
	fclose(fp);	
	
	return head;	
	



}

void sort(struct student *head)
{
	void print(struct student *head);
	struct student *p, *q, *t;

	q=head->next;
	head->next = NULL;//为插入新节点指向NULL提供准备.
	
	while(q)
	{
		p=head;
		while(p->next && p->next->num < q->num)
		{
			p=p->next;
		}
		t=q->next;
		q->next = p->next;//当小于时，p->next=NULL，q->next指向NULL.当大于时就插入.
		p->next = q;
		q=t;//q往后移.
	}

	printf("\n\n平均成绩排列（由小到大）\n\n");

	p=head->next;
	while(p)
	{
		printf("Num %d: %d\n", i+1, p->num);
		p = p->next;
		i++;
	}	

}


int count(struct student *head)
{
	int n=0;
	struct student* p=head->next;
	struct student *s;

	while( p )
	{	
		
		n++;	
		p=p->next;

	}

	fp=fopen("a.txt", "rb");
	printf("\n\n恢复数据\n");
	for(i=0; i<n; i++)
	{
	s=(struct student*)malloc( sizeof(struct student) );
	fread(s, sizeof(struct student), 1, fp);
	printf("Num %d: %d\n", i+1, s->num);
	}

	fclose(fp);
	return n;
}

void print(struct student *head)
{
	int i=0;
	struct student *p=head->next;
 
	printf("\n\noutput the students information:\n");
 
	while(p != NULL)
	{
		printf("Num %d: %d\n", i+1, p->num);
		p = p->next;
		i++;
	}

}


main()
{

	struct student *head;
	head=(struct student*)malloc( sizeof(struct student) );
 
	head = creat(head);
	print(head);

	sort(head);

	count(head);
}