import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class fff
{
    static Connection conn=null;

    public Connection get()
    {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            String url="jdbc:mysql://localhost:3306/lesson";
            conn=DriverManager.getConnection(url, "root", "");
        }
        catch(ClassNotFoundException e)
        {
            // TODO 自动生成的 catch 块
            e.printStackTrace();
        }
        catch(SQLException e)
        {
            // TODO 自动生成的 catch 块
            e.printStackTrace();
        }

        return conn;
    }

    public void backup(String database, String file)
    {
        File f=new File(file);
        if(!f.getParentFile().exists())
        {
            System.out.println("该文件所在目录不存在，准备创建！\n");
            f.getParentFile().mkdirs();
        }
        Runtime r=Runtime.getRuntime();
        Process p;
        try
        {
            p=r.exec("mysqldump -uroot lesson");
            int n;
            FileOutputStream fos=new FileOutputStream(f);
            byte[] b=new byte[1024];
            while((n=p.getInputStream().read(b)) != -1)
            {
                fos.write(b, 0, n);
                fos.flush();
            }

            fos.close();
        }

        catch(IOException e)
        {
            e.printStackTrace();
        }
        System.out.println("备份成功!");
    }

    public void load(String database, String file) throws IOException
    {
        File f=new File(file);
        if(!f.exists())
        {
            System.out.println("文件不存在!\n");
            throw new IOException();
        }

        FileInputStream fis=new FileInputStream(f);

        int n;
        Runtime r=Runtime.getRuntime();
        Process p=r.exec("mysql -uroot lesson");
        byte[] b=new byte[1024];
        OutputStream os=p.getOutputStream();

        while((n=fis.read(b)) != -1)
        {
            os.write(b, 0, n);
        }

        System.out.println("数据库" + database + "恢复成功!\n");
        fis.close();
        os.close();
    }

    public static void main(String[] args) throws IOException
    {
        // TODO 自动生成的方法存根
        fff f=new fff();
        // f.backup("lesson", "E:/BBBBB/a.sql");
        f.load("lesson", "E:/BBBBB/a.sql");

    }
}
